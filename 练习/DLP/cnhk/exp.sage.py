

# This file was *autogenerated* from the file exp.sage
from sage.all_cmdline import *   # import sage library

_sage_const_31981799071949968743482831587417174146463993877255771340814476669214408840460 = Integer(31981799071949968743482831587417174146463993877255771340814476669214408840460); _sage_const_15144025062588325012239455117890516531350002058200271280110877844265896081387 = Integer(15144025062588325012239455117890516531350002058200271280110877844265896081387); _sage_const_64464091191308356774703439660771627086045800299627641179047457478059588557461 = Integer(64464091191308356774703439660771627086045800299627641179047457478059588557461); _sage_const_31926335967105564755113987930261069322507794703287741857397622356704769886356 = Integer(31926335967105564755113987930261069322507794703287741857397622356704769886356); _sage_const_34835808070187351680507689900273321615070127680320357724483770400791707112940 = Integer(34835808070187351680507689900273321615070127680320357724483770400791707112940); _sage_const_2053202552422630348010474635096983783565667661786369125783579647572276572403 = Integer(2053202552422630348010474635096983783565667661786369125783579647572276572403); _sage_const_51320753844844801021362329076409450910659564359017581255542897537756778371539 = Integer(51320753844844801021362329076409450910659564359017581255542897537756778371539); _sage_const_4 = Integer(4); _sage_const_3 = Integer(3); _sage_const_1246057 = Integer(1246057); _sage_const_2357351 = Integer(2357351); _sage_const_435374689 = Integer(435374689); _sage_const_4200599533614753251608117237235588759908311280924414151 = Integer(4200599533614753251608117237235588759908311280924414151); _sage_const_1 = Integer(1); _sage_const_1016839 = Integer(1016839); _sage_const_813641 = Integer(813641); _sage_const_35993350 = Integer(35993350); _sage_const_15346402501700727093876 = Integer(15346402501700727093876); _sage_const_11000838085296873931177 = Integer(11000838085296873931177); _sage_const_2064666 = Integer(2064666)
from tqdm import tqdm
Q = (_sage_const_31981799071949968743482831587417174146463993877255771340814476669214408840460 ,_sage_const_15144025062588325012239455117890516531350002058200271280110877844265896081387 )
p = _sage_const_64464091191308356774703439660771627086045800299627641179047457478059588557461 
a = _sage_const_31926335967105564755113987930261069322507794703287741857397622356704769886356 
b = _sage_const_34835808070187351680507689900273321615070127680320357724483770400791707112940 
Gx = _sage_const_2053202552422630348010474635096983783565667661786369125783579647572276572403 
Gy = _sage_const_51320753844844801021362329076409450910659564359017581255542897537756778371539 

Zp = Zmod(p)
EC = EllipticCurve(Zp, [a, b])
P = EC(Gx, Gy)
Q = EC.point(Q)
print(factor(EC.order()))
# assert k < 32000000000000000000000000000
# 11000838085296873931177
# 32000000000000000000000000000
from Crypto.Util.number import *

pri = [_sage_const_4 ,_sage_const_3 ,_sage_const_1246057 ,_sage_const_2357351 ,_sage_const_435374689 ,_sage_const_4200599533614753251608117237235588759908311280924414151 ]

# dlogs = []
# for fac in pri:
#     t = int(P.order()) // int(fac)
#     dlog = discrete_log(t*Q,t*P,operation="+")
#     dlogs += [dlog]
#     print("factor: "+str(fac)+", Discrete Log: "+str(dlog)) #calculates discrete logarithm for each prime order
#     print(dlogs)
    
log = [_sage_const_1 , _sage_const_1 , _sage_const_1016839 , _sage_const_813641 , _sage_const_35993350 ]
pri = [_sage_const_4 ,_sage_const_3 ,_sage_const_1246057 ,_sage_const_2357351 ,_sage_const_435374689 ]

print(crt(log,pri))
mod = _sage_const_15346402501700727093876 
x = _sage_const_11000838085296873931177 

S = x*P
t = (x+_sage_const_15346402501700727093876 *_sage_const_2064666 )*P
print(t)
print(Q)
m = x+_sage_const_15346402501700727093876 *_sage_const_2064666 
print(long_to_bytes(m))
# for i in tqdm(range(2085178)):
#     S = S+t
#     if(S==Q):
#         print(i)

# 2064666

