from tqdm import tqdm

M = 93556643250795678718734474880013829509320385402690660619699653921022012489089
A = 66001598144012865876674115570268990806314506711104521036747533612798434904785
B = 25255205054024371783896605039267101837972419055969636393425590261926131199030
P = (56027910981442853390816693056740903416379421186644480759538594137486160388926, 65533262933617146434438829354623658858649726233622196512439589744498050226926)
Q = (61124499720410964164289905006830679547191538609778446060514645905829507254103, 2595146854028317060979753545310334521407008629091560515441729386088057610440)
F = FiniteField(M)
E = EllipticCurve(F,[A,B])
P = E.point(P)
Q = E.point(Q)
print(factor(E.order()))

# pri = [4,3,5,7,137,593,24337,25589,3637793,5733569,106831998530025000830453,1975901744727669147699767]
# dlogs = []
# for fac in pri:
#     t = int(P.order()) // int(fac)
#     dlog = discrete_log(t*Q,t*P,operation="+")
#     dlogs += [dlog]
#     print("factor: "+str(fac)+", Discrete Log: "+str(dlog)) #calculates discrete logarithm for each prime order
#     print(dlogs)
    
# log = [2, 1, 4, 1, 129, 224, 5729, 13993, 1730599, 4590572]
# pri = [4,3,5,7,137,593,24337,25589,3637793,5733569]
# 1978990
# 4590572
log = [2, 1, 4, 1, 129, 224, 5729, 13993, 1730599]
pri = [4,3,5,7,137,593,24337,25589,3637793]
# 77300604515314208997780
mod = 77300604515314208997780
print(crt(log,pri))
x=  3117625141812019604914
# 400000000000000000000000000000
# 152977126447386808276536247114 
S =x*P 
t = mod*P

for i in tqdm( range(1978990+200)):
    
    S+=t
    if(S==Q or i==1978990):
        print(i)