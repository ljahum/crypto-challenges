

# This file was *autogenerated* from the file exp.sage
from sage.all_cmdline import *   # import sage library

_sage_const_1284057549640164959065310299974715949780883842543987295579845101714329490371866414620403984059688256268916840753322634228189993387677187086805910608913877240 = Integer(1284057549640164959065310299974715949780883842543987295579845101714329490371866414620403984059688256268916840753322634228189993387677187086805910608913877240); _sage_const_2871828286437266324077547225563521746454811466060839307814808187038977339931268294634407454097422974392263009902452840007777204947601588882408605940896033213 = Integer(2871828286437266324077547225563521746454811466060839307814808187038977339931268294634407454097422974392263009902452840007777204947601588882408605940896033213); _sage_const_44709432769601533647164055172337077577197388971405441067408648552120273899439 = Integer(44709432769601533647164055172337077577197388971405441067408648552120273899439); _sage_const_5146142757398992761089276624845497246953677849813524410717292563307277646248 = Integer(5146142757398992761089276624845497246953677849813524410717292563307277646248); _sage_const_79560279623532866071675257110279687192436171302512534366260446974055296569775 = Integer(79560279623532866071675257110279687192436171302512534366260446974055296569775); _sage_const_26859165885861631636190724510665269671005299628857498631278393159264950495322 = Integer(26859165885861631636190724510665269671005299628857498631278393159264950495322); _sage_const_5089140070991418866765317340224488883853896999535207637664248575094162436344850602488004304731596114325990969313189073305315747359692187240695087335320008392 = Integer(5089140070991418866765317340224488883853896999535207637664248575094162436344850602488004304731596114325990969313189073305315747359692187240695087335320008392); _sage_const_2992276069467527712690275343211346442634209004250088074729707123246604474164141954635893526085370984681060737605953014207436859072640690696867665537702633916 = Integer(2992276069467527712690275343211346442634209004250088074729707123246604474164141954635893526085370984681060737605953014207436859072640690696867665537702633916); _sage_const_2872033002190388322518484598506887434919678523735730644910370844671443735688758643453429779989693237887466003372385925789250465970691404896872113423303038969 = Integer(2872033002190388322518484598506887434919678523735730644910370844671443735688758643453429779989693237887466003372385925789250465970691404896872113423303038969); _sage_const_6723990832715616500336095376073676701350917549865164961917998759715703447465536431516566237824694270482046698060410301496792150963281602144685882679390639901 = Integer(6723990832715616500336095376073676701350917549865164961917998759715703447465536431516566237824694270482046698060410301496792150963281602144685882679390639901); _sage_const_3956409056364638168400543181298452742239103965766830338476029710731353557119679043260892196298159250455141959488613009091004454622819349680688797299967002549 = Integer(3956409056364638168400543181298452742239103965766830338476029710731353557119679043260892196298159250455141959488613009091004454622819349680688797299967002549); _sage_const_2951776604917486290836695572957027106817487586162444507028471362837490084205243361576174502575216282250806141358680269076670568688622463255476309019517775311 = Integer(2951776604917486290836695572957027106817487586162444507028471362837490084205243361576174502575216282250806141358680269076670568688622463255476309019517775311); _sage_const_0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff = Integer(0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff); _sage_const_0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc = Integer(0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc); _sage_const_0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b = Integer(0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b); _sage_const_0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296 = Integer(0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296); _sage_const_0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5 = Integer(0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5); _sage_const_0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551 = Integer(0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551); _sage_const_0x1 = Integer(0x1); _sage_const_0x01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff = Integer(0x01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff); _sage_const_0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc = Integer(0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc); _sage_const_0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00 = Integer(0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00); _sage_const_0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66 = Integer(0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66); _sage_const_0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650 = Integer(0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650); _sage_const_0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409 = Integer(0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409); _sage_const_16 = Integer(16); _sage_const_2 = Integer(2); _sage_const_512 = Integer(512); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_256 = Integer(256); _sage_const_257 = Integer(257); _sage_const_18159149320158605242937658533192205255908256510625616254946992862480865015765341725 = Integer(18159149320158605242937658533192205255908256510625616254946992862480865015765341725); _sage_const_521 = Integer(521); _sage_const_240 = Integer(240); _sage_const_480 = Integer(480); _sage_const_7 = Integer(7); _sage_const_3 = Integer(3)
from hashlib import sha256
from tqdm import tqdm

from Crypto.Util.number import *

pub_key = (_sage_const_1284057549640164959065310299974715949780883842543987295579845101714329490371866414620403984059688256268916840753322634228189993387677187086805910608913877240 , _sage_const_2871828286437266324077547225563521746454811466060839307814808187038977339931268294634407454097422974392263009902452840007777204947601588882408605940896033213 )
P = (_sage_const_44709432769601533647164055172337077577197388971405441067408648552120273899439 , _sage_const_5146142757398992761089276624845497246953677849813524410717292563307277646248 )
Q = (_sage_const_79560279623532866071675257110279687192436171302512534366260446974055296569775 , _sage_const_26859165885861631636190724510665269671005299628857498631278393159264950495322 )
r1, s1 = (_sage_const_5089140070991418866765317340224488883853896999535207637664248575094162436344850602488004304731596114325990969313189073305315747359692187240695087335320008392 , _sage_const_2992276069467527712690275343211346442634209004250088074729707123246604474164141954635893526085370984681060737605953014207436859072640690696867665537702633916 )
r2, s2 = (_sage_const_2872033002190388322518484598506887434919678523735730644910370844671443735688758643453429779989693237887466003372385925789250465970691404896872113423303038969 , _sage_const_6723990832715616500336095376073676701350917549865164961917998759715703447465536431516566237824694270482046698060410301496792150963281602144685882679390639901 )
emb_flag = (_sage_const_3956409056364638168400543181298452742239103965766830338476029710731353557119679043260892196298159250455141959488613009091004454622819349680688797299967002549 , _sage_const_2951776604917486290836695572957027106817487586162444507028471362837490084205243361576174502575216282250806141358680269076670568688622463255476309019517775311 )


# NIST P-256
NIST_256 = (
    NIST_256_P := _sage_const_0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff ,
    NIST_256_K := GF(NIST_256_P),
    NIST_256_A := NIST_256_K(_sage_const_0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc ),
    NIST_256_B := NIST_256_K(_sage_const_0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b ),
    NIST_256_CURVE := EllipticCurve(NIST_256_K, (NIST_256_A, NIST_256_B)),
    NIST_256_GEN := NIST_256_CURVE(_sage_const_0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296 , _sage_const_0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5 ),
    NIST_256_ORDER := _sage_const_0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551  * _sage_const_0x1 
)
NIST_256_CURVE.set_order(NIST_256_ORDER)

# NIST P-521
NIST_521 = (
    NIST_521_P := _sage_const_0x01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff ,
    NIST_521_K := GF(NIST_521_P),
    NIST_521_A := NIST_521_K(_sage_const_0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc ),
    NIST_521_B := NIST_521_K(_sage_const_0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00 ),
    NIST_521_CURVE := EllipticCurve(NIST_521_K, (NIST_521_A, NIST_521_B)),
    NIST_521_GEN := NIST_521_CURVE(_sage_const_0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66 , _sage_const_0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650 ),
    NIST_521_ORDER := _sage_const_0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409  * _sage_const_0x1 
)

e1 = int(sha256(b"AN INFAMOUS PRNG NAMED DUAL_EC BACKDOORED BY NSA, FINALLY CONFIRMED BY SNOWDEN IN 2013.").hexdigest(), _sage_const_16 )
e2 = int(sha256(b"NO ONE CAN EXTRACT THE BACKDOOR! UNLESS YOU CAN BREAK THE ECDSA SIGNATURE SCHEME / ECDLP!").hexdigest(), _sage_const_16 )

g = _sage_const_2 **_sage_const_512 
ni = inverse_mod(r1*s2, NIST_521_ORDER)
L = matrix(ZZ, [[_sage_const_1 ,  _sage_const_0 , r2*s1*ni],
            [_sage_const_0 ,  _sage_const_2 **_sage_const_256 , (e1*r2-e2*r1)*ni],
            [_sage_const_0 ,  _sage_const_0 , NIST_521_ORDER]])

basis = L.LLL()
for _ in basis:
    if abs(_[-_sage_const_2 ]) == _sage_const_2 **_sage_const_256 :
        print(abs(int(_[_sage_const_0 ])).bit_length())
        if abs(int(_[_sage_const_0 ])).bit_length() < _sage_const_257  and abs(int(_[-_sage_const_1 ])).bit_length() <_sage_const_257 :
            k1 = abs(int(_[_sage_const_0 ]))
            k2 = abs(int(_[-_sage_const_1 ]))
            
            
x1 = (k1*s1-e1)*inverse_mod(r1, NIST_521_ORDER)%NIST_521_ORDER
x2 = (k2*s2-e2)*inverse_mod(r2, NIST_521_ORDER)%NIST_521_ORDER

#d = 31415926535
d = _sage_const_18159149320158605242937658533192205255908256510625616254946992862480865015765341725 
E = EllipticCurve(NIST_521_K, (NIST_521_A, NIST_521_B))
E2 = EllipticCurve(NIST_256_K, (NIST_256_A, NIST_256_B))
P = E2(P)
Q = E2(Q)

assert x1 == x2
print(x1.nbits())
rand1 = x1>>(_sage_const_521 -_sage_const_240 )
rand2 = (x1>>(_sage_const_521 -_sage_const_480 ))&(_sage_const_2 **_sage_const_240 -_sage_const_1 )

#print(rand2.bit_length())
#d = 31415926535
print(rand2.nbits())

rand1 = rand1<<_sage_const_16 

lsb = _sage_const_0 
for _ in tqdm(range(_sage_const_2 **_sage_const_16 )):
    try:
        seed = rand1+_
        Q0 = E2.lift_x(seed)
        state = ZZ((d*Q0).xy()[_sage_const_0 ])
        r2 = ZZ((state*Q).xy()[_sage_const_0 ])>>_sage_const_16 
        if int(rand2) == int(r2):
            lsb = _
            break
    except:
        continue

seed = rand1+lsb
Q0 = E2.lift_x(seed)

state = ZZ((d*Q0).xy()[_sage_const_0 ])
for _ in range(_sage_const_7 ):
    state = ZZ((state*P).xy()[_sage_const_0 ])
    print(state)
    
k = _sage_const_0 
for _ in range(_sage_const_3 ):
    print("state", state)
    state = ZZ((state*P).xy()[_sage_const_0 ])
    out = ZZ((state * Q).xy()[_sage_const_0 ])>>_sage_const_16 
    print("out", out)
    k += out
    k = k<<_sage_const_240 
k = k>>_sage_const_240 
k = k>>(_sage_const_240 *_sage_const_3 -_sage_const_521 )
        #print(k.bit_length())
        
print(k)
emb_flag = E(emb_flag)
M = inverse_mod(k, NIST_521_ORDER)*emb_flag
print(M.xy()[_sage_const_0 ])
m = long_to_bytes(int(M.xy()[_sage_const_0 ]))
print(m)

