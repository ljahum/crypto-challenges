

# This file was *autogenerated* from the file exp.sage
from sage.all_cmdline import *   # import sage library

_sage_const_6660938713055850877314255610895820875305739186102790477966786501810416821294442374977193379731704125177528590285016474818841859956990486067573436301232301 = Integer(6660938713055850877314255610895820875305739186102790477966786501810416821294442374977193379731704125177528590285016474818841859956990486067573436301232301); _sage_const_65537 = Integer(65537); _sage_const_5539256645640498184116966196249666621079506508209770360679460869295427007578 = Integer(5539256645640498184116966196249666621079506508209770360679460869295427007578); _sage_const_20151017657582479433586370393795140515103572865771721775868586710594524816458 = Integer(20151017657582479433586370393795140515103572865771721775868586710594524816458); _sage_const_6641320679869421443758875467781930795132746694454926965779628505713445486895274490835545942727970688359873955019634877304270220728625521646208912044469433 = Integer(6641320679869421443758875467781930795132746694454926965779628505713445486895274490835545942727970688359873955019634877304270220728625521646208912044469433); _sage_const_2856872654927815636828860866843721158889474116106462420201092148493803550131351543372740950198853438539317164093538508795630146854596724019329887894933972 = Integer(2856872654927815636828860866843721158889474116106462420201092148493803550131351543372740950198853438539317164093538508795630146854596724019329887894933972); _sage_const_1 = Integer(1); _sage_const_256 = Integer(256); _sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_2000 = Integer(2000); _sage_const_93511613846272978051774379195449772332692693333173612296021789501865098047641 = Integer(93511613846272978051774379195449772332692693333173612296021789501865098047641); _sage_const_71231138455229760679977773382211636812795966734548537479512744210680602878261 = Integer(71231138455229760679977773382211636812795966734548537479512744210680602878261)
pkey = (_sage_const_6660938713055850877314255610895820875305739186102790477966786501810416821294442374977193379731704125177528590285016474818841859956990486067573436301232301 , _sage_const_65537 , _sage_const_5539256645640498184116966196249666621079506508209770360679460869295427007578 , _sage_const_20151017657582479433586370393795140515103572865771721775868586710594524816458 )
enc = (_sage_const_6641320679869421443758875467781930795132746694454926965779628505713445486895274490835545942727970688359873955019634877304270220728625521646208912044469433 ,_sage_const_2856872654927815636828860866843721158889474116106462420201092148493803550131351543372740950198853438539317164093538508795630146854596724019329887894933972 ,_sage_const_1 )
nbit = _sage_const_256 
n,e,a,b = pkey 
 
 
from z3 import *
 
 
k1 = _sage_const_2  ** (nbit - _sage_const_1 )
k2 = _sage_const_2  ** (nbit // _sage_const_2 )
for i in range(_sage_const_0 ,_sage_const_2000 ,_sage_const_2 ):
    print(i)
    s= Solver()
    p = BitVec('p', _sage_const_256 )
    q = _sage_const_2 *(p+k1+k2)+_sage_const_1 +i     #4种情况 第1种情况i=2有解
    s.add(p*q == n)
    if s.check() == sat:
        tp = s.model()[p].as_long()
        if n%tp == _sage_const_0 :
            print(tp)
        
 
p = _sage_const_93511613846272978051774379195449772332692693333173612296021789501865098047641     
q = _sage_const_71231138455229760679977773382211636812795966734548537479512744210680602878261 

