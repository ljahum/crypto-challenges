import os
import random
from Crypto.Util.number import *
from secret import flag


assert flag[:5]==b'flag{' and flag[-1:]==b'}'
flag = flag[5:-1]
m = bytes_to_long(flag)


def rabin(m):
    m = m+os.urandom(32)
    p = getPrime(384)
    q = getPrime(384)
    Fp = GF(p)
    Fq = GF(q)
    n = p*q
    e = 2
    a = random.randint(0, p-1)
    b = random.randint(0, p-1)

    Ep = EllipticCurve(Zmod(p), [a, b])
    Eq = EllipticCurve(Zmod(q), [a, b])
    En = EllipticCurve(Zmod(n), [a, b])
    ord_p = Ep.order()
    ord_q = Eq.order()

    xm = bytes_to_long(m)
    while True:
        try:
            Gp = Ep.lift_x(Fp(xm))
            Gq = Eq.lift_x(Fq(xm))
            ym = crt([int(Gp.xy()[1]),int(Gq.xy()[1])],[p,q])
            break
        except :
            xm += 1
            continue

    M = En((xm,ym))
    C = e*M
    pk = [a, b, n, C]
    leak = ord_p*ord_q
    return pk, leak


print(rabin(flag))
"""
[138681122158674534796479818810828100269024674330030901179877002756402543027343312824423418859769980312713625658733,
4989541340743108588577899263469059346332852532421276369038720203527706762720292559751463880310075002363945271507040,
762981334990685089884160169295988791471426441106522959345412318178660817286272606245181160960267776171409174142433857335352402619564485470678152764621235882232914864951345067231483720755544188962798600739631026707678945887174897543,
(19591102741441427006422487362547101973286873135330241799412389205281057650306427438686318050682578531286702107543065985988634367524715153650482199099194389191525898366546842016339136884277515665890331906261550080128989942048438965, 728465071542637655949094554469510039681717865811604984652385614821789556549826602178972137405550902004858456181137844771163710123158955524137202319902378503104952106036911634918189377295743976966073577013775200078470659428344462772),
762981334990685089884160169295988791471426441106522959345445792076415993922016249232021560266153453470937452118572318136597282436269660557904217923887981072203978473274822142705255987334355747997513083011853917049784914749699536828]
"""
