from gmpy2 import invert
from hashlib import sha512, md5
from Crypto.Util.number import *

def hash(message): return int(sha512(message.encode()).hexdigest(), 16)

message1 = '0234e7971889def7e60348f77db94b7a'
message2 = '16c5ac270b72f70319657b4410d985d4'
M1 = hash(message1)
M2 = hash(message2)
r1 = 10859236269959765735236393779936305217305574331839234502190226708929991582386 
r2 = 41960642246379067640524709416001536058292817319109764317369777224426218746518
s1 = 13707557323895695260471053137828523837745895683218331343360027380310980108819 
s2 = 74676725322515593502346275468843411563746982149373670021082686341369076719088
q = 82302835442112137125891403368151249910268706824854786126600390413622302196443
p = 3297226463037324458008837284498963372649038889390685051849680175016505646001761220109858921624266044035133134135402561235635833428206886888308027772353030767400921078346868377298401213812053250316002033941692272192644613252296579884516731560436501073253924457646558698855484781747029397755111633297587215976579633451933658235385386539518006570069653575146060016811911140614606471930327341368582979836042585406811352236326065292636484550807213756482153084427714549694264685695977531537425682212155553568848666088576932888234659355213664909753781753917401161977762663658097504411914908081677033980915039079517766159760522261279115347385813009437510156898969769563687869495721977265444799585634019880951532080217960456901788918439265788169910062822889580199366417455186595489973000351770200485095008494228829300145039695936946379585625051402553034971207474762463147744467360158847593356030745194143276254949463650698210515569533
g = 1156233264299340971106498371495495695225880592354374034142195518472540521911699506391311324676590685365234887170345722135060009885002334748836477169806166169806180231794918961214520698361874839110454610266388341977984902756569838594616255112661600466818870137432772800368859461445854700956291885576855069405183771903076277144927769029433730710613058788277691211698675287829143272152835171859480781061918556840079857761203012054552142555673071865310355331986288606422711525790877591376770834180618492794265362178603111236615495225612101250344421932588038244804199229449738675082560512062564365473035097263889257937140778993389305893378514344032352806521972367991027459721160744835688761657797398841523104074451793557924512992305640697344011520550723893828185707635141404445213445935586965289450282024222064488965878769991566367115153619761583843561579531705057955933288008556165952066173304891391375100346312776539530448611005
for t1 in range(1,512):
    for t2 in range(1,512):

        m1 = s1*t1*invert(r1,q)
        m2 = s2*t2*invert(r2,q)
        a = invert(m1-m2,q)*(M1*invert(r1,q) - M2*invert(r2,q))%q
        # print(a)
        # 36331593474518642679376208928611022830814766236016637670560007040919942159246

        # ------------------
        k1 = (a*t1)%q
        r1_ = pow(g,k1,p)%q
        if r1_ == r1:
            print(r1_,r1)
            print(a)
            print("k1",k1)
            x = (s1*k1-M1)*invert(r1,q) % q
            flag = 'flag{'+md5(long_to_bytes(x)).hexdigest()+'}'
            print(flag)
            exit()

# flag{448018d725636e5ca1ed9675a8b23df4}
            
