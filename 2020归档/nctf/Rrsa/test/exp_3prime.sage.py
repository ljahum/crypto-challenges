

# This file was *autogenerated* from the file exp_3prime.sage
from sage.all_cmdline import *   # import sage library

_sage_const_21042386320461812987330816392098240698276635627848296634010576418273708816782958583103696828135288949414221589341467658064094598467668468595037697687750483880395469599521104157594619830580106862675563701705018615159006446644021544316810926338322157017389264374661765424506780851663855558201827576097543518994377226063764149613823365504382372078180027325195272624855294504490833929359368308707764293125557546664420893758640869982116140126086426540917734813358836893067618374141923592785173854382180238700583697156691601934440612521844948568895860370880433290719691878702923317686545883216562624808716885148360626528967 = Integer(21042386320461812987330816392098240698276635627848296634010576418273708816782958583103696828135288949414221589341467658064094598467668468595037697687750483880395469599521104157594619830580106862675563701705018615159006446644021544316810926338322157017389264374661765424506780851663855558201827576097543518994377226063764149613823365504382372078180027325195272624855294504490833929359368308707764293125557546664420893758640869982116140126086426540917734813358836893067618374141923592785173854382180238700583697156691601934440612521844948568895860370880433290719691878702923317686545883216562624808716885148360626528967); _sage_const_115335789255058895682592451960585841486815138568122306104084367382458365056126361697377982424300598997379691333597553424011470562501230041240568305131898531148471468939736488868775069815159801182493477485492305358681823722056410329709408453574808046136179329442098419731238582842745484929139056637655189186252143319295538959685913258802816971224783244537833808635057243089738336170480327743030884481767635586093554260804569048534045456929023854277201036390797521635580275650428390709997586639967985160586723894506597370195934576724225846113960504298084257775839669957914975266872390383863253601504619975569840739621 = Integer(115335789255058895682592451960585841486815138568122306104084367382458365056126361697377982424300598997379691333597553424011470562501230041240568305131898531148471468939736488868775069815159801182493477485492305358681823722056410329709408453574808046136179329442098419731238582842745484929139056637655189186252143319295538959685913258802816971224783244537833808635057243089738336170480327743030884481767635586093554260804569048534045456929023854277201036390797521635580275650428390709997586639967985160586723894506597370195934576724225846113960504298084257775839669957914975266872390383863253601504619975569840739621); _sage_const_503545456931536990775490301518805656044810817011751236163106353495982893728383552849893279865741180730620203169141899775376565506790413324060047457366901730012661199181441398078117626122305957671334360456138759788767316447054527925131523931877480588020802792027338499485155770383751659919262670543149083894048505031062542967115650951777349530726211819388585925234388179805655969370936058510585606537614094420500960765830174954682503903110637341514816645261820689060631461482640831702205910237579681145660863955980575206009415937874440094389211394874400437264199433631305335428417425959766946806779975784658834519793 = Integer(503545456931536990775490301518805656044810817011751236163106353495982893728383552849893279865741180730620203169141899775376565506790413324060047457366901730012661199181441398078117626122305957671334360456138759788767316447054527925131523931877480588020802792027338499485155770383751659919262670543149083894048505031062542967115650951777349530726211819388585925234388179805655969370936058510585606537614094420500960765830174954682503903110637341514816645261820689060631461482640831702205910237579681145660863955980575206009415937874440094389211394874400437264199433631305335428417425959766946806779975784658834519793); _sage_const_1979422504182210511095677816565239190456766321980759438948409129770686269886812149623911454262873283623407019559481813275399187392107128013175278545797430875030797877490395378315928750020849322976228922266601118223674000651642697107684343108767550433586018770031143905214584670912674633906042372534995158756296980263752150325942741495798966194479068744554919362643930352443881565287472391681344265625323534111335596194780587388505869839679219425111778450016585307685723207502992301760790785973564291764018588807562869479097131190394552030311558437420782538753519767437469125363017893654973166982915912195240136476741 = Integer(1979422504182210511095677816565239190456766321980759438948409129770686269886812149623911454262873283623407019559481813275399187392107128013175278545797430875030797877490395378315928750020849322976228922266601118223674000651642697107684343108767550433586018770031143905214584670912674633906042372534995158756296980263752150325942741495798966194479068744554919362643930352443881565287472391681344265625323534111335596194780587388505869839679219425111778450016585307685723207502992301760790785973564291764018588807562869479097131190394552030311558437420782538753519767437469125363017893654973166982915912195240136476741); _sage_const_13714329089408944566741589359341221692912648476275275459604046043640662246830754737363820499044246390497202254269165698665830998800625201456610636274239089985607658412519946587441816114938755359613714126964808440539098183856255793004359771352111828700132731504788463277358269636445655043000915502351901282229899515249410431482638053094583480822239782953367696777622224673150763106539355862602323877706822328340267133741830274581713401553293967226651418737183233949613760769576958031756738599803707372712379852381617002316653827635729732114550396570709239960356277545954272350308062125669331549565231345468456188543318 = Integer(13714329089408944566741589359341221692912648476275275459604046043640662246830754737363820499044246390497202254269165698665830998800625201456610636274239089985607658412519946587441816114938755359613714126964808440539098183856255793004359771352111828700132731504788463277358269636445655043000915502351901282229899515249410431482638053094583480822239782953367696777622224673150763106539355862602323877706822328340267133741830274581713401553293967226651418737183233949613760769576958031756738599803707372712379852381617002316653827635729732114550396570709239960356277545954272350308062125669331549565231345468456188543318); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_0p355 = RealNumber('0.355'); _sage_const_0p4 = RealNumber('0.4')
N = _sage_const_21042386320461812987330816392098240698276635627848296634010576418273708816782958583103696828135288949414221589341467658064094598467668468595037697687750483880395469599521104157594619830580106862675563701705018615159006446644021544316810926338322157017389264374661765424506780851663855558201827576097543518994377226063764149613823365504382372078180027325195272624855294504490833929359368308707764293125557546664420893758640869982116140126086426540917734813358836893067618374141923592785173854382180238700583697156691601934440612521844948568895860370880433290719691878702923317686545883216562624808716885148360626528967 
e1 = _sage_const_115335789255058895682592451960585841486815138568122306104084367382458365056126361697377982424300598997379691333597553424011470562501230041240568305131898531148471468939736488868775069815159801182493477485492305358681823722056410329709408453574808046136179329442098419731238582842745484929139056637655189186252143319295538959685913258802816971224783244537833808635057243089738336170480327743030884481767635586093554260804569048534045456929023854277201036390797521635580275650428390709997586639967985160586723894506597370195934576724225846113960504298084257775839669957914975266872390383863253601504619975569840739621 
e2 = _sage_const_503545456931536990775490301518805656044810817011751236163106353495982893728383552849893279865741180730620203169141899775376565506790413324060047457366901730012661199181441398078117626122305957671334360456138759788767316447054527925131523931877480588020802792027338499485155770383751659919262670543149083894048505031062542967115650951777349530726211819388585925234388179805655969370936058510585606537614094420500960765830174954682503903110637341514816645261820689060631461482640831702205910237579681145660863955980575206009415937874440094389211394874400437264199433631305335428417425959766946806779975784658834519793 
e3 = _sage_const_1979422504182210511095677816565239190456766321980759438948409129770686269886812149623911454262873283623407019559481813275399187392107128013175278545797430875030797877490395378315928750020849322976228922266601118223674000651642697107684343108767550433586018770031143905214584670912674633906042372534995158756296980263752150325942741495798966194479068744554919362643930352443881565287472391681344265625323534111335596194780587388505869839679219425111778450016585307685723207502992301760790785973564291764018588807562869479097131190394552030311558437420782538753519767437469125363017893654973166982915912195240136476741 
cipher = _sage_const_13714329089408944566741589359341221692912648476275275459604046043640662246830754737363820499044246390497202254269165698665830998800625201456610636274239089985607658412519946587441816114938755359613714126964808440539098183856255793004359771352111828700132731504788463277358269636445655043000915502351901282229899515249410431482638053094583480822239782953367696777622224673150763106539355862602323877706822328340267133741830274581713401553293967226651418737183233949613760769576958031756738599803707372712379852381617002316653827635729732114550396570709239960356277545954272350308062125669331549565231345468456188543318 
B = Matrix([
    [_sage_const_1 , -N, _sage_const_0 , N ** _sage_const_2 , _sage_const_0 , _sage_const_0 , _sage_const_0 , -N ** _sage_const_3 ],
    [_sage_const_0 , e1, -e1, -e1*N, -e1, _sage_const_0 , e1*N, e1*N ** _sage_const_2 ],
    [_sage_const_0 , _sage_const_0 , e2, -e2*N, _sage_const_0 , e2 * N, _sage_const_0 , e2 * N ** _sage_const_2 ],
    [_sage_const_0 , _sage_const_0 , _sage_const_0 , e1*e2, _sage_const_0 , -e1*e2, -e1*e2, -e1*e2*N],
    [_sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , e3, -e3*N, -e3*N, e3*N ** _sage_const_2 ],
    [_sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , e1*e3, _sage_const_0 , -e1*e3*N],
    [_sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , e2*e3, -e2*e3*N],
    [_sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , e1*e2*e3],


])

x2 = _sage_const_0p355 
x3 = _sage_const_0p4 

D = Matrix([
    [int(N ** (_sage_const_3 /_sage_const_2 )), _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 ],
    [_sage_const_0 ,   N, _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 ],
    [_sage_const_0 , _sage_const_0 , int(N ** (x2+(_sage_const_3 /_sage_const_2 ))), _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 ],
    [_sage_const_0 , _sage_const_0 , _sage_const_0 , int(N ** (_sage_const_1 /_sage_const_2 )), _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 ],
    [_sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , int(N ** (x3+(_sage_const_3 /_sage_const_2 ))), _sage_const_0 , _sage_const_0 , _sage_const_0 ],
    [_sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , int(N ** (x3+_sage_const_1 )), _sage_const_0 , _sage_const_0 ],
    [_sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , int(N ** (x3+_sage_const_1 )), _sage_const_0 ],
    [_sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_0 , _sage_const_1 ]
])
res = B*D
print(type(res))
lll = res.LLL()  # v2
y = lll[_sage_const_0 ]
inv = res.inverse()
x = y*inv

# ---------------------------------------
phi = int(e1*int(x[_sage_const_1 ]))//int(x[_sage_const_0 ])
print('phi', phi)
print('-----------------------')

bezout = xgcd(e1, phi)
d1 = Integer(mod(bezout[_sage_const_1 ], phi))
print('d1:', d1)
plain1 = pow(cipher, d1, N)
# -------------------------------------
flag = (int(plain1))
print("flag int ", flag)
print(bytes.fromhex(hex(flag)[_sage_const_2 :]))
print('---------------------------------')
# ----------------------------------------------

d = inverse_mod(e2, phi)
flag = pow(cipher, d, N)
print(flag)
print(hex(flag))
print(bytes.fromhex(hex(flag)[_sage_const_2 :]))

'''
bezout = xgcd(e2, phi)
d2 = integer(mod(bezout[1], phi))
plaiN2 = pow(cipher,d2,N)
flag = hex(int(plaiN2))[2:-1].decode('hex')
print flag
'''

