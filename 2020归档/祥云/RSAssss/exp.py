from Crypto.Util.number import *
from gmpy2 import *
# p p+x 192 q q+y 8
n = 8030860507195481656424331455231443135773524476536419534745106637165762909478292141556846892146553555609301914884176422322286739546193682236355823149096731058044933046552926707682168435727800175783373045726692093694148718521610590523718813096895883533245331244650675812406540694948121258394822022998773233400623162137949381772195351339548977422564546054188918542382088471666795842185019002025083543162991739309935972705871943787733784491735500905013651061284020447578230135075211268405413254368439549259917312445348808412659422810647972872286215701325216318641985498202349281374905892279894612835009186944143298761257

q = 12047136483003651578909593128203074584496457259106848289743526946035579167688777229047680197217557485116628391601657830884050927756254938325609189373517091
q1 = 12047136483003651578909593128203074584496457259106848289743526946035579167688777229047680197217557485116628391601657830884050927756254938325609189373517099

print(n//(q*q1))
n1 = 55334300136390172952574690294217950273400994040869877561077079469878505134891018939218863407506743764623915084101887527304415898986578067468256467651936867515676235065715496550211034347907737094823469333195406923333724124722099864623335733711442577668419215322735780388732824934197518275685915934770357190473
t = iroot(n1, 2)[0]
for i in range(t-500, t+500):
    if n1 % i == 0:
        print(i)
        break
p = 7438702853077959381258310132763396438106232921778795282485510181580967905871873724619094997564895264666055160684895522536793412379230489025112499879129021
p1 = 7438702853077959381258310132763396438106232921778795282485510181580967905871873724619094997564895264666055160684895522536793412379230489025112499879129213
print(p*p1*q*q1)

e = 0x10001
c = 3304124639719334349997663632110579306673932777705840648575774671427424134287680988314129312593361087606243819528298610131797078262351307396831985397555390640151391138633431951746748156610463582479645561779194981806129898009876517899450840875569675976765155608446799203699927448835004756707151281044859676695533373755798273892503194753948997947653100690841880925445059175494314198605475023939567750409907217654291430615102258523998394231436796902635077995829477347316754739938980814293304289318417443493019704073164585505217658570214989150175123757038125380996050761572021986573934155470641091678664451080065719261207
phi = (p-1)*(q-1)*(p1-1)*(q1-1)
d = invert(e, phi)
print(long_to_bytes(pow(c,d,n)))
# flag{2bef1a3e-5598-404e-b022-f593a230ce58}
