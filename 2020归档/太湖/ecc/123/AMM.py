# import gmpy2
# from sympy.ntheory.residue_ntheory import nthroot_mod
from libnum import *
import random
import math
# from scipy.special import cbrt
import time


def onemod(e, q):
    p = random.randint(1, q-1)
    while(pow(p, (q-1)//e, q) == 1):  # (r,s)=1
         p = random.randint(1, q)
    return p

def AMM_rth(o, r, q):  # r|(q-1)
    print('start to calculate primitive root...')
    start = time.time()
    assert((q-1) % r == 0)
    p = onemod(r, q)
    print(('p:%d' % p))

    t = 0
    s = q-1
    while(s % r == 0):
        s = s//r
        t += 1
    k = 1
    while((s*k+1) % r != 0):
        k += 1
    alp = (s*k+1)//r

    print(('s:%d,t:%d r:%d alp:%d' % (s, t, r, alp)))
    a = pow(p, r**(t-1)*s, q)
    b = pow(o, r*a-1, q)
    c = pow(p, s, q)
    h = 1

    for i in range(1, t-1):
        
        d = pow(b, r**(t-1-i), q)
        print(('d:%d' % d))
        if d == 1:
            j = 0
        else:
            j = (-math.log(d, a)) % r
        print(j)
        j = int(j)
        b = (b*(c**(r*j))) % q
        h = (h*c**j) % q
        c = (c*r) % q
    result = (pow(o, alp, q)*h)
    end = time.time()

    print(('result:%d' % result))
    print(('Finish in {} seconds'.format(end-start)))
    return result

'''
n = 
m = 
e = 
'''
e = 13161
m = 11941055546120835541933837916957535027223641642056156743752345801163456170772591807989846005495118671627583480778591488285910051133125545781378893719554427584148075540206612251653456701817071613890721071975616517809857996246607186607334395902967699076560894499607006508473605653089963092771854212576322017350805147649094768237953455009748131863337396511143680074932058392590124680763754449521538152648826051051725262170054340100951449328841662181738885435084388023374118710392556656584562494466181529819874959240003672308773193993983011133478065179503497212335076082903214298387572478483167372666139510894330498063363
n = 65329994248655129869212037322165868784304244595030684586874015261340424059813456912702083957545164137975096688201310525665564966677395366410632588958558562909110990282947242847588740691288777988940990359022498301258647140423766217011879964398418074048717416843706512509740911844455932025736619522303853394953038174965083546072232294330630626677144780653258968011785880997213565788898917198828056074952496287343206005614181518571753788765637850122324912188193104124744912792982674760823257132500011905859327396250698697685681313839497290354995042404667680288898060984613973361595718450077414282761756016648509150077682945977736054901872987515534117164082845403941244747271879512162149585430735624372128796283756578847116245671936976985025612647609802581808546315656599020899904853936217881880231282587158514373439333811838426819105812154622695771871674982683953961536581392382909221411886324967544118022467277715930560485051910595977043610128628719083015864048169398021978125914357636857645563066687990547928637904819723429341036962003855701694563058235471276429240405038849500842928220564609793617158155117989123912459206961206396688820705046120194889981486732484002100366387998209958453556008594453329532011725926008462247927158840


s = AMM_rth(n,e,m)
print(s)
