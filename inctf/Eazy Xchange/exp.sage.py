

# This file was *autogenerated* from the file exp.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF = Integer(0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF); _sage_const_3 = Integer(3); _sage_const_0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B = Integer(0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B); _sage_const_0 = Integer(0); _sage_const_16 = Integer(16); _sage_const_38764697308493389993546589472262590866107682806682771450105924429005322578970 = Integer(38764697308493389993546589472262590866107682806682771450105924429005322578970); _sage_const_112597290425349970187225006888153254041358622497584092630146848080355182942680 = Integer(112597290425349970187225006888153254041358622497584092630146848080355182942680); _sage_const_2 = Integer(2); _sage_const_1024 = Integer(1024)
import os, hashlib, pickle
from tqdm import tqdm
# -----------------------------------
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad
p = _sage_const_0xFFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF 
a = p - _sage_const_3 
b = _sage_const_0x5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B 
EC = EllipticCurve(GF(p), [a, b])
G = EC.gens()[_sage_const_0 ] # 固定的点

def decrypt(cip, key,iv):
    key = hashlib.sha256(str(key).encode()).digest()[:_sage_const_16 ]

    cipher = AES.new(key, AES.MODE_CBC, iv)
    return cipher.decrypt(cip)

data = {'cip': '9dcc2c462c7cd13d7e37898620c6cdf12c4d7b2f36673f55c0642e1e2128793676d985970f0b5024721afaaf02f2f045', 'iv': 'cbd6c57eac650a687a7c938d90e382aa', 'G': '(38764697308493389993546589472262590866107682806682771450105924429005322578970 : 112597290425349970187225006888153254041358622497584092630146848080355182942680 : 1)'}
FLAG = data['cip']
iv = data['iv']
FLAG = bytes.fromhex(FLAG)
iv = bytes.fromhex(iv)
x = _sage_const_38764697308493389993546589472262590866107682806682771450105924429005322578970 
y = _sage_const_112597290425349970187225006888153254041358622497584092630146848080355182942680 
G = EC(x,y)
print(G)

SS = G
for i in tqdm(range(_sage_const_2 ,_sage_const_1024 *_sage_const_1024 )):
    
    SS = SS+G
    msg = decrypt(FLAG, SS.xy()[_sage_const_0 ],iv)
    if(b'inctf' in msg):
        print(msg)
        break

