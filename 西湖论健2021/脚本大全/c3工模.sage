#! /usr/bin/sage
from sage.all import *
from sage.groups.generic import bsgs
from Crypto.Util.number import *
N = 16853363721279926869719340297014734667618480335699927000844507790482849388547589478934472281415542102905842897019545517940019936583664753697034612355724222987661298265580066184020741929032978165852353327396629545850890433369768162515680699592296770715202229795745842737381692484399024907015273321528631290821233069050331410716777651009453797668705765005099048736110381279897854117365625391041192203832793357555876105304556044569500595591486464498470244010256178098810189724709284981649414966555390424924821164430157697320748630446598083303813729836403720771650316042098205753800251632974104677386247712587035321302367
e1 = 4473810071328667776261298821080622870224633003731893474819247477374927694076783214754932353133443238333596011505832866775149454187011977065418475862294416108442807814581523823390216340584646251526726879942084912814825027748335764823960239016044232656826678902425703938799295914082752485415650998689286176163183690605000907079531501606322870028308734896506633358023816991421362910242405250085691809874517103498900094501299897952750637947973239212741500865298086419118301397540670284679111839596858816077917723027555081827608995792066354736789424284451814642519935568867188067477567422869849099538832957005033050480111
e2 = 1885926470387327205636867720302819780574594520704368302271168819649472950271591712804273287913243870065987539451098088834838095300899092716120637714470405061977232026949026204255736785635931432064567388328817153563350653382391134247596638841505561699649497850098918284541905132942330702927673786694868279310802721134705078267842050943740623559398657566454169354954158037590305356425769369033297794729677349823858707596340181278352054144143876712205991208189884771751690123389753401455595596179220033507246943341128716477265774532295666521418607286923356388852548809235691252662988876676650158990774981069301541015391
e = 65537
c= 15753395313312442187300599628664457982452918199184943560860910385735089143865878022211429290936425728227803421605712908129501359799577731254031496672965554222416751528742747825365216743978706509351425080141232602618585136225937412344434810498920669889646983870698587203834948822927991159960522569194523938458310487993613479061500314147511478042881574426172237695179181096267744638696096304399177289602802201254002678057240810959297959383398174668431888490788624538960930547528815053504959140385382775863861991623676368167182219899054758970687750678551862269021080026673253883117493592538638472909418694314361392265334

B = Matrix([
    [1, -N,   0,   N^2],
    [0, e1, -e1, -e1*N],
    [0,  0,  e2, -e2*N],
    [0,  0,   0, e1*e2]
])

x = 0.355

D = Matrix([
    [N,            0,            0,  0],
    [0, int(N^(1/2)),            0,  0],
    [0,            0, int(N^(1+x)),  0],
    [0,            0,            0,  1]

])

res = B*D
lll = res.LLL()
y =  lll[0]
inv = res.inverse()
x = y*inv
phi = (e1*(x[1]))//x[0]
phi = int(phi)
d= inverse(e,phi)
# c = pow(123,e,N)
print(pow(c,d,N))
print(long_to_bytes( pow(c,d,N)))