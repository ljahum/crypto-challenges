

# This file was *autogenerated* from the file /mnt/c/Users/16953/Desktop/新建文件夹/数据测试.sage
from sage.all_cmdline import *   # import sage library

_sage_const_78783023222142579402299 = Integer(78783023222142579402299); _sage_const_20339472065400293617 = Integer(20339472065400293617); _sage_const_16071808231974749459 = Integer(16071808231974749459); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1); _sage_const_40 = Integer(40); _sage_const_3889559329731 = Integer(3889559329731); _sage_const_3073445144167 = Integer(3073445144167); _sage_const_71092821 = Integer(71092821); _sage_const_54711 = Integer(54711); _sage_const_211917889 = Integer(211917889); _sage_const_14503 = Integer(14503); _sage_const_2 = Integer(2); _sage_const_4 = Integer(4); _sage_const_15 = Integer(15); _sage_const_0p1 = RealNumber('0.1')#!sage
from icecream import *
from sage.all import *
from Crypto.Util.number import *
N = _sage_const_78783023222142579402299 
e1 = _sage_const_20339472065400293617 
e2 = _sage_const_16071808231974749459 

list1 = continued_fraction(Integer(e1)/Integer(e2))
conv = list1.convergents()

time=_sage_const_0 
for i in conv:
    time+=_sage_const_1 
    if(time==_sage_const_40 ):
        break
    k = i.numerator()
    qi = i.denominator()
    print(time)
    print(k,qi)
a = _sage_const_3889559329731 
b = _sage_const_3073445144167 
'''
sage: factor(3889559329731)
3^3 * 229 * 6079 * 103483
sage: factor(3073445144167)
41 * 43 * 71 * 1693 * 14503
sage:
'''
a = _sage_const_71092821 *_sage_const_54711 
b =  _sage_const_211917889  * _sage_const_14503 

x1 = _sage_const_211917889 
y1  = _sage_const_54711 
x2=_sage_const_71092821 
y2=_sage_const_14503 
S = N+_sage_const_1 -(e1*x1)//y1

D = int((S**_sage_const_2 -_sage_const_4 *N)**(_sage_const_1 /_sage_const_2 ))
ic(S)
ic(D)
hp = (S+D)//_sage_const_2 
R = PolynomialRing(Zmod(N), implementation='NTL', names=('x',)); (x,) = R._first_ngens(1)
p = hp + x
x0 = p.small_roots(X = _sage_const_2 **_sage_const_15 , beta = _sage_const_0p1 )[_sage_const_0 ]
P = int(p(x0))
print(P)

