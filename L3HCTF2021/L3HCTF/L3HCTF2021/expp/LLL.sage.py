

# This file was *autogenerated* from the file /mnt/c/Users/16953/Desktop/密码学归档/mmxctf/赛题归档/crypto-challenges/L3HCTF2021/expp/LLL.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141 = Integer(0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141); _sage_const_256 = Integer(256); _sage_const_8 = Integer(8); _sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_102 = Integer(102); _sage_const_100 = Integer(100); _sage_const_101 = Integer(101); _sage_const_3 = Integer(3)#! /usr/bin/sage

from tqdm import tqdm
from rich.progress import track
from rich.traceback import install
install()
# -----------------------------------
from data import *
# from sage.all import *
from libnum import invmod
#! /usr/bin/sage
from sage.all import *
from sage.groups.generic import bsgs
from Crypto.Util.number import *

# from Crypto.Util.number import *
n = _sage_const_0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141 
tt=[]
uu =[]
for i in range(len(ss)):
    tt.append(rr[i]*invmod(_sage_const_256 *ss[i],n))
    uu.append((kk[i]-hh[i])*invmod(_sage_const_256 *ss[i],n))
l=_sage_const_8 
print('ok')

ct = (_sage_const_2 **_sage_const_256 )/n
cu = _sage_const_2 **_sage_const_256 
print(ct)
print( cu)
M = [[_sage_const_0  for i in range(_sage_const_102 )] for j in range(_sage_const_102 )]
for i in range(_sage_const_100 ):
    for j in range(_sage_const_100 ):
        M[i][j] = n
for i in range(_sage_const_100 ):
    M[_sage_const_100 ][i] = tt[i]
    M[_sage_const_101 ][i] = uu[i]
TT = vector(M[_sage_const_100 ])
UU =vector(M[_sage_const_101 ])
M[_sage_const_100 ][_sage_const_100 ] = ct
M[_sage_const_101 ][_sage_const_101 ] = cu
M = matrix(M)
print('start LLLing.....')
B = M.LLL()


f = open('./data','w')
for i in B[-_sage_const_3 :]:
    f.write(str(list(i))+'\n')

