from gmpy2 import *
from icecream import *
from math import log
from decimal import Decimal

from random import *
from Crypto.Util.number import *
# from flag import flag
from decimal import getcontext

beta = 0.34
delta = 0.02
amplification = 2048

p = getPrime(int(beta * amplification))
q = getPrime(int((1 - beta) * amplification))
N = p * q

while True:
    dq = getrandbits(int(delta*amplification))
    dp = getrandbits(int((beta-delta) * amplification))
    if (dp-dq) % gcd(p-1, q-1) != 0:
        continue
    d = ((inverse((p-1)//gcd(p-1, q-1), (q-1)//gcd(p-1, q-1))     *      (dq-dp)//gcd(p-1, q-1))      % ((q-1)//gcd(p-1, q-1)))   * (p-1) + dp
    if gcd(d, (p-1)*(q-1)) == 1:
        print(f'dq ={dq}')
        print(f'dp ={dp}')
        break
# d = Decimal(d)
# n = Decimal(N)

n=N
e = inverse(d, (p-1)*(q-1))
print(f'p={p}')
print(f'q={q}')
print(f'd={d}')
print(f'e={e}')
tmp = e*dq-1
phi = (p-1)*(q-1)
t1 = phi//gcd(phi,tmp)
ic(tmp%phi)
ic(t1,q-1)
ic(phi%t1)

# m = bytes_to_long(flag.encode())
# c = pow(m, e, N)
# print('N =', N)
# print('e =', e)
# print('c =', c)

'''
N = 7194944829894746935571965271122989443610702698015123026500274312320541540511952275333536082176132102091625202863345739074691901574020649953130369453360247690506566827078013306825941200018330639608298539682191482947557146237487451707849833303794107411686130468587672820352641436722348277258977791778239539008852841749667581869688275892813664557078043533743669277649148468667399393518112220602616186358353262921270486781426670131125521444335280904901224934061164334131460273779473387748722008412594372005590209919098686472153912130124772089012962023984089123929555594332030502775588070235834837667605812843128059372243
e = 5872666789397408936685003821802975734744078884385553897196686533187747297681714766542317071546532454504513425295170366015384657690105523240363850101369048640430719519784564240908244756652800934680608667950183962226340288720771217107508516125044088043789281574833079766048266075717484676158307477384862873719462770774288252074344824446884295300603035728339571606659365040029505127532956295163195257002051007447197735267997104725561159289832252522298457628452222155625714679911912616173849423059919537353814530280736653541415686756485413316581322357887750268983241858913704388088485132644523120028234659344174431547087
c = 6601667269134560091452287214083525217696007424340765571114688738279264700361513951309195757650152324371826111195352731779137577044473630747863137747356695892337017953751159248388157498368915463745769509485009626774902347006319659852239932231921393353157319713540010424345134411781723171111939891127671029064626426950125001347122070491553845919803891156107693973027238705710354919725550360159383455222982999904576805089837067774838194257113022653159325313574447189639317397889065351340828031907571541750274329094240472180870714728295651611160552345500801797030280900507979459558944006193012524181456837126192865748097
'''
