

# This file was *autogenerated* from the file chall.sage
from sage.all_cmdline import *   # import sage library

_sage_const_10000000000000001119 = Integer(10000000000000001119); _sage_const_7 = Integer(7); _sage_const_0 = Integer(0); _sage_const_3 = Integer(3); _sage_const_1 = Integer(1); _sage_const_11 = Integer(11); _sage_const_22 = Integer(22); _sage_const_33 = Integer(33); _sage_const_20 = Integer(20)#!/usr/bin/env sage
import struct
from random import SystemRandom

p = _sage_const_10000000000000001119 
R = GF(p)['x']; (x,) = R._first_ngens(1)
y=x
f = y + y**_sage_const_7 
C = HyperellipticCurve(f, _sage_const_0 )
J = C.jacobian()

es = [SystemRandom().randrange(p**_sage_const_3 ) for _ in range(_sage_const_3 )]
Ds = [J(C(x, min(f(x).sqrt(_sage_const_0 ,_sage_const_1 )))) for x in (_sage_const_11 ,_sage_const_22 ,_sage_const_33 )]
q = []

def clk():
	global Ds,es
	Ds = [e*D for e,D in zip(es, Ds)]
	return Ds

def generate():
    
    u,v = sum(clk())
    rs = [u[i] for i in range(_sage_const_3 )] + [v[i] for i in range(_sage_const_3 )]
    assert _sage_const_0  not in rs and _sage_const_1  not in rs
    q = struct.pack('<'+'Q'*len(rs), *rs)
    return q


flag = "flag{xxxxxxx}"

text = 'a'*_sage_const_20 +flag
t = ''
keys = generate()
leng = len(keys)
i = _sage_const_0 
print(leng)
for x in text:
    t += chr((keys[i%leng])^ord(x))
    i += _sage_const_1 
print (t.encode('hex'))
#for x,y in zip(RNG(),flag):


