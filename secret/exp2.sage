#!sage
from sage.all import *
from Crypto.Util.number import *
from gmpy2 import *
p=0xb5655f7c97e8007baaf31716c305cf5950a935d239891c81e671c39b7b5b2544b0198a39fd13fa83830f93afb558321680713d4f6e6d7201d27256567b8f70c3
D=15987058835088036058838351739905403758810826722245822649290306549906899936826738229650730140126509371862930340608846190807298868677166971678478129606238898364288362139315516922003581996769819030117310508402522153899137933429897987557331966070437119010259514160059698255241259153692392463260794449949596746727
mul=7194716155235037744823597029059822446255314248196377746260315999958188811928743123657567494196521690514320209430663462342437059567384744437239548754416135
c=mul*invert(D,p)%p
e=4
R.<x> = Zmod(p)[]
f = x ^ e- c
f = f.monic()
res1 = f.roots()
print(res1)
'''
[(8974688152068989298195929910188106149496062744681250335186042632999815699677870132316124626820931416918858690280379931917671441488157872194201517051400341, 1), 
(525790636484540950204224969430100540610864311097332039424148432916695325722525076899086329684921510053494705871966501245787849445230704073588659221078062, 1)]
'''